<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.proboscis.pinjected</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Pinjected</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="nameissoap@gmail.com">
        Proboscis
    </vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
This plugin will add a marker in the gutter for running an Injected variable.
This plugin will look for any variable in a open python module and mark all the "Pinjected" related variables as runnable.
List of detectable variables:
- a python function defined with @injected_function annotation
- a python function defined with @injected_instance annotation
- a python variable typed as "Injected" i.e ```a: Injected = Injected.pure('a')```

Please beware that there may be misinterpretation of the code and the plugin may mark a variable as runnable even if it is not.

Generate Run Configuration and Run:
This action generates a run configuration for an injected function and runs it. It allows users to streamline their development process by automating the process of generating and running code.
  ]]></description>
    <actions>
<!--        <action id="com.proboscis.kotlinopenai.RefactorAction" class="com.proboscis.kotlinopenai.RefactorAction"-->
<!--                text="Refactor selection using GPT"/>-->
<!--        <action id="com.proboscis.kotlinopenai.ImplementAction" class="com.proboscis.kotlinopenai.ImplementAction"-->
<!--                text="Implement selection using GPT"/>-->
<!--        <action id="com.proboscis.kotlinopenai.InstructAction" class="com.proboscis.kotlinopenai.InstructAction"-->
<!--                text="Instruct GPT" description="Instruct GPT to follow your instruction about the selected text"/>-->
        <action id="com.proboscis.kotlinopenai.FindInjectedRunnablesAction" class="com.proboscis.kotlinopenai.FindInjectedRunnablesAction" text="find injected runnables" description="find injected runnables"/>
        <group id="com.proboscis.kotlinopenai.Actions" text="Kotlin OpenAI" description="Kotlin OpenAI actions">
            <action id="com.proboscis.kotlinopenai.PrintModuleStructure" class="com.proboscis.kotlinopenai.PrintModuleStructureAction" text="Print Module Structure" description="Print module structure with action items" />
        </group>
        <action id="MyPlugin.TestExecuteScript" class="com.proboscis.kotlinopenai.TestExecuteScriptAction"
                text="Execute Test Script" description="Test executeScriptInConsole">
            <add-to-group group-id="MainMenu" anchor="last"/>
        </action>
        <action id="com.proboscis.kotlinopenai.RunSelectedInjectedAction" class="com.proboscis.kotlinopenai.RunSelectedInjectedAction"
                text="Run selected injected" description="runs the selected injected variable in console">
            <add-to-group group-id="MainMenu" anchor="last"/>
        </action>
    </actions>
    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.python</depends>
    <depends>com.jetbrains.python</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.lineMarkerProvider language="Python" implementationClass="com.proboscis.kotlinopenai.AnnotatedFunctionGutterIconProvider"/>
<!--        <completion.contributor language="Python" implementationClass="com.proboscis.kotlinopenai.InjectedCompletionContributor"/>-->
<!--        <toolWindow id="Injected Functions" anchor="right"-->
<!--                    factoryClass="com.proboscis.kotlinopenai.InjectedCompletionProvider.proboscis.kotlinopenai.InjectedFunctionsToolWindowFactory"-->
<!--                    icon="AllIcons.General.GearPlain" />-->
<!--        <completion.contributor language="Python" implementationClass="com.proboscis.kotlinopenai.InjectedFunctionCompletionContributor"/>-->
        <parameterInfoHandler
                language="Python"
                implementationClass="com.proboscis.kotlinopenai.InjectedFunctionParameterInfoHandler"/>
        <gotoDeclarationHandler implementation="com.proboscis.kotlinopenai.InjectedGotoDeclarationHandler"/>
    </extensions>
<!--    <application-components>-->
<!--        <component>-->
<!--            <implementation-class>com.proboscis.kotlinopenai.MyPluginService</implementation-class>-->
<!--        </component>-->
<!--    </application-components>-->
</idea-plugin>