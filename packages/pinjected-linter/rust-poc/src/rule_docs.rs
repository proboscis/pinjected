/// Embedded rule documentation
use std::collections::HashMap;

/// Initialize a HashMap with all rule documentation
pub fn get_rule_docs() -> HashMap<&'static str, &'static str> {
    let mut docs = HashMap::new();

    // Embed all rule documentation at compile time
    docs.insert(
        "PINJ001",
        include_str!("../../docs/rules/pinj001_instance_naming.md"),
    );
    docs.insert(
        "PINJ002",
        include_str!("../../docs/rules/pinj002_instance_defaults.md"),
    );
    docs.insert(
        "PINJ003",
        include_str!("../../docs/rules/pinj003_async_instance_naming.md"),
    );
    docs.insert(
        "PINJ004",
        include_str!("../../docs/rules/pinj004_direct_instance_call.md"),
    );
    docs.insert(
        "PINJ005",
        include_str!("../../docs/rules/pinj005_injected_function_naming.md"),
    );
    docs.insert(
        "PINJ006",
        include_str!("../../docs/rules/pinj006_async_injected_naming.md"),
    );
    docs.insert(
        "PINJ007",
        include_str!("../../docs/rules/pinj007_slash_separator_position.md"),
    );
    docs.insert(
        "PINJ009",
        include_str!("../../docs/rules/pinj009_no_direct_injected_calls.md"),
    );
    docs.insert(
        "PINJ010",
        include_str!("../../docs/rules/pinj010_design_usage.md"),
    );
    docs.insert(
        "PINJ011",
        include_str!("../../docs/rules/pinj011_iproxy_annotations.md"),
    );
    docs.insert(
        "PINJ012",
        include_str!("../../docs/rules/pinj012_dependency_cycles.md"),
    );
    docs.insert(
        "PINJ013",
        include_str!("../../docs/rules/pinj013_builtin_shadowing.md"),
    );
    docs.insert(
        "PINJ014",
        include_str!("../../docs/rules/pinj014_missing_stub_file.md"),
    );
    docs.insert(
        "PINJ015",
        include_str!("../../docs/rules/pinj015_missing_slash.md"),
    );
    docs.insert(
        "PINJ016",
        include_str!("../../docs/rules/pinj016_missing_protocol.md"),
    );
    docs.insert(
        "PINJ017",
        include_str!("../../docs/rules/pinj017_missing_dependency_type_annotation.md"),
    );
    docs.insert(
        "PINJ018",
        include_str!("../../docs/rules/pinj018_double_injected.md"),
    );
    docs.insert(
        "PINJ019",
        include_str!("../../docs/rules/pinj019_no_main_block.md"),
    );
    docs.insert(
        "PINJ026",
        include_str!("../../docs/rules/pinj026_a_prefix_dependency_any_type.md"),
    );
    docs.insert(
        "PINJ027",
        include_str!("../../docs/rules/pinj027_no_nested_injected.md"),
    );
    docs.insert(
        "PINJ028",
        include_str!("../../docs/rules/pinj028_no_design_in_injected.md"),
    );
    docs.insert(
        "PINJ029",
        include_str!("../../docs/rules/pinj029_no_injected_pure_instantiation.md"),
    );
    docs.insert(
        "PINJ031",
        include_str!("../../docs/rules/pinj031_no_injected_calls_in_decorators.md"),
    );
    docs.insert(
        "PINJ032",
        include_str!("../../docs/rules/pinj032_no_iproxy_return_type.md"),
    );
    docs.insert(
        "PINJ033",
        include_str!("../../docs/rules/pinj033_no_iproxy_argument_type.md"),
    );
    docs.insert(
        "PINJ034",
        include_str!("../../docs/rules/pinj034_no_lambda_in_design.md"),
    );
    docs.insert(
        "PINJ035",
        include_str!("../../docs/rules/pinj035_deprecated_design_functions.md"),
    );
    docs.insert(
        "PINJ036",
        include_str!("../../docs/rules/pinj036_enforce_pyi_stubs.md"),
    );
    docs.insert(
        "PINJ040",
        include_str!("../../docs/rules/pinj040_injected_pytest_deprecated.md"),
    );
    docs.insert(
        "PINJ041",
        include_str!("../../docs/rules/pinj041_no_underscore_defaults_in_injected_dataclass.md"),
    );
    docs.insert(
        "PINJ042",
        include_str!("../../docs/rules/pinj042_no_unmarked_injected_calls.md"),
    );
    docs.insert(
        "PINJ043",
        include_str!("../../docs/rules/pinj043_no_design_in_test_functions.md"),
    );
    docs.insert(
        "PINJ044",
        include_str!("../../docs/rules/pinj044_no_async_resolver_creation.md"),
    );
    docs.insert(
        "PINJ045",
        include_str!("../../docs/rules/pinj045_no_mode_parameters.md"),
    );
    docs.insert(
        "PINJ046",
        include_str!("../../docs/rules/pinj046_mutable_attribute_naming.md"),
    );
    docs.insert(
        "PINJ047",
        include_str!("../../docs/rules/pinj047_max_mutable_attributes.md"),
    );
    docs.insert(
        "PINJ048",
        include_str!("../../docs/rules/pinj048_no_default_dependencies_in_injected.md"),
    );
    docs.insert(
        "PINJ049",
        include_str!("../../docs/rules/pinj049_enforce_protocol_type_annotations.md"),
    );
    docs.insert(
        "PINJ050",
        include_str!("../../docs/rules/pinj050_no_os_environ.md"),
    );
    docs.insert(
        "PINJ051",
        include_str!("../../docs/rules/pinj051_no_setter_methods.md"),
    );
    docs.insert(
        "PINJ061",
        include_str!("../../docs/rules/pinj061_enforce_module_design_in_pytests.md"),
    );
    docs.insert(
        "PINJ062",
        include_str!("../../docs/rules/pinj062_no_duplicate_injected_instance_names.md"),
    );
    docs.insert(
        "PINJ063",
        include_str!("../../docs/rules/pinj063_markdown_frontmatter_tags.md"),
    );

    docs
}
