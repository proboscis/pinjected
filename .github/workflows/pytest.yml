name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: read
  actions: read
  pull-requests: write
  repository-projects: read
  security-events: write

env:
  GH_TOKEN: ${{ secrets.GH_PAT }}
  GITHUB_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT }}
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Configure Git for private packages
      run: |
        git config --global credential.helper store
        git config --global url."https://${GH_TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
        
    - name: Configure pip for private packages
      run: |
        mkdir -p ~/.pip
        echo "[global]
        extra-index-url = https://oauth2:${GH_TOKEN}@github.com
        trusted-host = github.com" > ~/.pip/pip.conf
        chmod 600 ~/.pip/pip.conf
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        
    - name: Cache Poetry dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
          
    - name: Install dependencies
      run: |
        poetry install
        
    - name: Run tests
      run: |
        poetry run pytest -v
